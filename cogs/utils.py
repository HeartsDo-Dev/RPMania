#    Greysario Manager - A Discord Bot for roleplay server
#    Copyright (C) 2O19 HeartsDo
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.


import discord
from discord.ext import commands
import json
import urllib
from xml.etree import ElementTree as ET
import logging
from trello import TrelloApi


with open('config.json', 'r') as fichier:
        config = json.load(fichier)
trello = TrelloApi(config['trello']['ident'])
trello.set_token(config['trello']['token'])

class Utils(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        with open('config.json', 'r') as fichier:
            self.config = json.load(fichier)


    @commands.command()
    async def nation(self, ctx):
        '''Affiche la nation de Greysario, la ville du serveur (En Anglais)'''
        nation = "greysario"
        requestURL = 'https://www.nationstates.net/cgi-bin/api.cgi?nation=' \
                     + nation
        root = ET.parse(urllib.request.urlopen(requestURL)).getroot()
        logging.info(root)
        name = root.find('NAME').text
        category = root.find('CATEGORY').text
        unstatus = root.find('UNSTATUS').text
        motto = root.find('MOTTO').text
        flag = root.find('FLAG').text
        animal = root.find('ANIMAL').text
        money = root.find('CURRENCY').text
        dc = root.find('FREEDOM/CIVILRIGHTS').text
        ecom = root.find('FREEDOM/ECONOMY').text
        lp = root.find('FREEDOM/POLITICALFREEDOM').text
        embed=discord.Embed(title=category, color=0x0080ff)
        embed.set_author(name=name)
        embed.set_thumbnail(url=flag)
        embed.add_field(name="Position dans la WA", value=unstatus, inline=True)
        embed.add_field(name="Devise", value=motto, inline=True)
        embed.add_field(name="Animal", value=animal, inline=True)
        embed.add_field(name="Monnaie", value=money, inline=True)
        embed.add_field(name="Droits civiques", value=dc, inline=True)
        embed.add_field(name="Economie", value=ecom, inline=True)
        embed.add_field(name="Liberté politique", value=lp, inline=True)
        embed.set_footer(text="Generated by the NationStates API -- https://www.nationstates.net")
        await ctx.send(embed=embed)


    @commands.command()
    async def suggest(self, ctx, cat:str="None", *, name:str="None"):
        if cat == "None":
            return await ctx.send("Tu veut que je l'envoie ou server ou bot, à toi de voir je t'attend !")
        if cat =! "server" or "bot":
            return await ctx.send("Alors c'est bien de me dire où mais si je connais pas je connais pas :shrug: !")
        if name == "None":
            return await ctx.send("Votre message ne contient pas un nom, je vais pas créer un ticket pour 0 idée.")
        if cat == "server":
            try:
                trello.cards.new(name, self.config['trello']['arrivals'], "Demandée par " + ctx.author.name + "#" + ctx.author.discriminator)
            except HTTPError:
                return await ctx.send("Erreur HTTP !")
            return await ctx.send("Votre suggestion pour le serveur à été transmis sur Trello, merci !")
        if cat == "bot":
            try:
                trello.cards.new(name, self.config['trello']['arrivalb']), "Demandée par " + ctx.author.name + "#" + ctx.author.discriminator)
            except HTTPError:
                return await ctx.send("Erreur HTTP !")
            return await ctx.send("Votre suggestion pour le bot à été transmis sur Trello, merci !")


def setup(bot):
    bot.add_cog(Utils(bot))
